{"ast":null,"code":"var _jsxFileName = \"/Users/sorin/Documents/Projects/react_counter_ui/src/index.js\";\nimport React, { Component } from 'react';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { connect, Provider } from \"react-redux\";\nimport { render } from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  count: 0\n};\nconst INCREMENT = 'INCREMENT';\nconst DECREMENT = 'DECREMENT';\nconst RESET = 'RESET';\n\nconst incrementValue = () => ({\n  type: INCREMENT\n});\n\nconst decrementValue = () => ({\n  type: DECREMENT\n});\n\nconst resetValue = () => ({\n  type: RESET\n});\n\nconst unit = 1;\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === INCREMENT) {\n    return {\n      count: state.count + unit\n    };\n  }\n\n  if (action.type === DECREMENT) {\n    let counter = 0;\n\n    if (state.count > 0) {\n      counter = state.count - unit;\n    }\n\n    return {\n      count: counter\n    };\n  }\n\n  if (action.type === RESET) {\n    return {\n      count: 0\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  incrementLocal() {\n    this.countLocal += 1;\n    console.log('incremente!');\n  }\n\n  decrementLocal() {\n    this.countLocal -= 1;\n  }\n\n  resetLocal() {\n    this.countLocal = 0;\n  }\n\n  render() {\n    const {\n      count,\n      increment,\n      decrement,\n      reset\n    } = this.props;\n    const {\n      countLocal\n    } = this.countLocal;\n    const {\n      incrementLocal\n    } = this.incrementLocal;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"Counter\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"count\",\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: increment,\n            children: \"Increment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: decrement,\n            children: \"Decrement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: reset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"Counter\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"count\",\n          children: countLocal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"controls\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: incrementLocal,\n            children: \"Increment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapsStateToProps = state => {\n  return state;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment() {\n      dispatch(incrementValue());\n    },\n\n    decrement() {\n      dispatch(decrementValue());\n    },\n\n    reset() {\n      dispatch(resetValue());\n    }\n\n  };\n};\n\nconst CounterContainer = connect(mapsStateToProps, mapDispatchToProps)(Counter);\nrender( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(CounterContainer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 128,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals(); // const prom = new Promise((resolve, reject) => {\n//     resolve(\"OK\")\n// }).then((message) => {\n//     // console.log(\"then\")\n// })","map":{"version":3,"sources":["/Users/sorin/Documents/Projects/react_counter_ui/src/index.js"],"names":["React","Component","App","reportWebVitals","createStore","connect","Provider","render","initialState","count","INCREMENT","DECREMENT","RESET","incrementValue","type","decrementValue","resetValue","unit","reducer","state","action","counter","store","window","__REDUX_DEVTOOLS_EXTENSION__","Counter","constructor","props","incrementLocal","countLocal","console","log","decrementLocal","resetLocal","increment","decrement","reset","mapsStateToProps","mapDispatchToProps","dispatch","CounterContainer","document","getElementById"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { connect, Provider } from \"react-redux\";\nimport { render } from 'react-dom';\n\nconst initialState = {\n    count: 0,\n}\n\nconst INCREMENT = 'INCREMENT';\nconst DECREMENT = 'DECREMENT';\nconst RESET = 'RESET';\n\nconst incrementValue = () => ({\n    type: INCREMENT,\n})\nconst decrementValue = () => ({\n    type: DECREMENT,\n})\nconst resetValue = () => ({\n    type: RESET,\n})\n\nconst unit = 1;\n\nconst reducer = (state = initialState, action) => {\n    if (action.type === INCREMENT) {\n        return {\n            count: state.count + unit,\n        }\n    }\n    if (action.type === DECREMENT) {\n        let counter = 0;\n        if (state.count > 0) {\n            counter = state.count - unit;\n        }\n        return {\n            count: counter,\n        }\n    }\n    if (action.type === RESET) {\n        return {\n            count: 0,\n        }\n    }\n    return state;\n}\n\nconst store = createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nclass Counter extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        }\n    }\n\n    incrementLocal() {\n        this.countLocal += 1;\n        console.log('incremente!');\n    };\n\n    decrementLocal() {\n        this.countLocal -= 1;\n    };\n\n    resetLocal() {\n        this.countLocal = 0;\n    };\n\n    render() {\n        const { count, increment, decrement, reset } = this.props;\n        const { countLocal } = this.countLocal;\n        const { incrementLocal } = this.incrementLocal;\n\n        return (\n            <>\n                <main className=\"Counter\">\n                    <p className=\"count\">{count}</p>\n                    <section className=\"controls\">\n                        <button onClick={increment}>Increment</button>\n                        <button onClick={decrement}>Decrement</button>\n                        <button onClick={reset}>Reset</button>\n                    </section>\n                </main>\n                <main className=\"Counter\">\n                    <p className=\"count\">{countLocal}</p>\n                    <section className=\"controls\">\n                        <button onClick={incrementLocal}>Increment</button>\n                    </section>\n                </main>\n            </>\n        );\n    }\n}\n\nconst mapsStateToProps = (state) => {\n    return state\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        increment() {\n            dispatch(incrementValue())\n        },\n        decrement() {\n            dispatch(decrementValue())\n        },\n        reset() {\n            dispatch(resetValue())\n        },\n    }\n}\n\nconst CounterContainer = connect(\n    mapsStateToProps,\n    mapDispatchToProps\n)(Counter)\n\nrender(\n  <Provider store={store}>\n      <CounterContainer />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// const prom = new Promise((resolve, reject) => {\n//     resolve(\"OK\")\n// }).then((message) => {\n//     // console.log(\"then\")\n// })"]},"metadata":{},"sourceType":"module"}