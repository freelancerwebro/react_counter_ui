{"ast":null,"code":"var _jsxFileName = \"/Users/sorin/Documents/Projects/react_counter_ui/src/index.js\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { connect, Provider } from \"react-redux\";\nimport { render } from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  count: 0\n};\nconst INCREMENT = 'INCREMENT';\nconst DECREMENT = 'DECREMENT';\nconst RESET = 'RESET';\n\nconst incrementValue = () => ({\n  type: INCREMENT\n});\n\nconst decrementValue = () => ({\n  type: DECREMENT\n});\n\nconst resetValue = () => ({\n  type: RESET\n});\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === INCREMENT) {\n    return {\n      count: state.count + 1\n    };\n  }\n\n  if (action.type === DECREMENT) {\n    let counter = 0;\n\n    if (state.count > 0) {\n      counter = state.count - 1;\n    }\n\n    return {\n      count: counter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(reducer);\n\nclass Counter extends Component {\n  render() {\n    const {\n      count,\n      increment,\n      decrement\n    } = this.props;\n    console.log({\n      count,\n      increment,\n      decrement\n    });\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"Counter\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"count\",\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: increment,\n          children: \"Increment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: decrement,\n          children: \"Decrement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapsStateToProps = state => {\n  return state;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment() {\n      dispatch(incrementValue());\n    },\n\n    decrement() {\n      dispatch(decrementValue());\n    }\n\n  };\n};\n\nconst CounterContainer = connect(mapsStateToProps, mapDispatchToProps)(Counter);\nrender( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(CounterContainer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 85,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/sorin/Documents/Projects/react_counter_ui/src/index.js"],"names":["React","Component","App","reportWebVitals","createStore","connect","Provider","render","initialState","count","INCREMENT","DECREMENT","RESET","incrementValue","type","decrementValue","resetValue","reducer","state","action","counter","store","Counter","increment","decrement","props","console","log","mapsStateToProps","mapDispatchToProps","dispatch","CounterContainer","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,aAAlC;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,KAAK,GAAG,OAAd;;AAEA,MAAMC,cAAc,GAAG,OAAO;AAC1BC,EAAAA,IAAI,EAAEJ;AADoB,CAAP,CAAvB;;AAGA,MAAMK,cAAc,GAAG,OAAO;AAC1BD,EAAAA,IAAI,EAAEH;AADoB,CAAP,CAAvB;;AAGA,MAAMK,UAAU,GAAG,OAAO;AACtBF,EAAAA,IAAI,EAAEF;AADgB,CAAP,CAAnB;;AAIA,MAAMK,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAC9C,MAAIA,MAAM,CAACL,IAAP,KAAgBJ,SAApB,EAA+B;AAC3B,WAAO;AACHD,MAAAA,KAAK,EAAES,KAAK,CAACT,KAAN,GAAc;AADlB,KAAP;AAGH;;AACD,MAAIU,MAAM,CAACL,IAAP,KAAgBH,SAApB,EAA+B;AAC3B,QAAIS,OAAO,GAAG,CAAd;;AACA,QAAIF,KAAK,CAACT,KAAN,GAAc,CAAlB,EAAqB;AACjBW,MAAAA,OAAO,GAAGF,KAAK,CAACT,KAAN,GAAc,CAAxB;AACH;;AACD,WAAO;AACHA,MAAAA,KAAK,EAAEW;AADJ,KAAP;AAGH;;AACD,SAAOF,KAAP;AACH,CAhBD;;AAkBA,MAAMG,KAAK,GAAGjB,WAAW,CAACa,OAAD,CAAzB;;AAEA,MAAMK,OAAN,SAAsBrB,SAAtB,CAAgC;AAC5BM,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEE,MAAAA,KAAF;AAASc,MAAAA,SAAT;AAAoBC,MAAAA;AAApB,QAAkC,KAAKC,KAA7C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAElB,MAAAA,KAAF;AAASc,MAAAA,SAAT;AAAoBC,MAAAA;AAApB,KAAZ;AAEA,wBACI;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA,kBAAsBf;AAAtB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAS,QAAA,SAAS,EAAC,UAAnB;AAAA,gCACI;AAAQ,UAAA,OAAO,EAAEc,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,OAAO,EAAEC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAf2B;;AAkBhC,MAAMI,gBAAgB,GAAIV,KAAD,IAAW;AAChC,SAAOA,KAAP;AACH,CAFD;;AAGA,MAAMW,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHP,IAAAA,SAAS,GAAG;AACRO,MAAAA,QAAQ,CAACjB,cAAc,EAAf,CAAR;AACH,KAHE;;AAIHW,IAAAA,SAAS,GAAG;AACRM,MAAAA,QAAQ,CAACf,cAAc,EAAf,CAAR;AACH;;AANE,GAAP;AAQH,CATD;;AAWA,MAAMgB,gBAAgB,GAAG1B,OAAO,CAC5BuB,gBAD4B,EAE5BC,kBAF4B,CAAP,CAGvBP,OAHuB,CAAzB;AAKAf,MAAM,eACJ,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEc,KAAjB;AAAA,yBACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADI,EAIJW,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJI,CAAN,C,CAOA;AACA;AACA;;AACA9B,eAAe","sourcesContent":["import React, {Component} from 'react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { connect, Provider } from \"react-redux\";\nimport { render } from 'react-dom';\n\nconst initialState = {\n    count: 0,\n}\n\nconst INCREMENT = 'INCREMENT';\nconst DECREMENT = 'DECREMENT';\nconst RESET = 'RESET';\n\nconst incrementValue = () => ({\n    type: INCREMENT,\n})\nconst decrementValue = () => ({\n    type: DECREMENT,\n})\nconst resetValue = () => ({\n    type: RESET,\n})\n\nconst reducer = (state = initialState, action) => {\n    if (action.type === INCREMENT) {\n        return {\n            count: state.count + 1,\n        }\n    }\n    if (action.type === DECREMENT) {\n        let counter = 0;\n        if (state.count > 0) {\n            counter = state.count - 1;\n        }\n        return {\n            count: counter,\n        }\n    }\n    return state;\n}\n\nconst store = createStore(reducer);\n\nclass Counter extends Component {\n    render() {\n        const { count, increment, decrement } = this.props;\n        console.log({ count, increment, decrement });\n\n        return (\n            <main className=\"Counter\">\n                <p className=\"count\">{count}</p>\n                <section className=\"controls\">\n                    <button onClick={increment}>Increment</button>\n                    <button onClick={decrement}>Decrement</button>\n                    <button>Reset</button>\n                </section>\n            </main>\n        );\n    }\n}\n\nconst mapsStateToProps = (state) => {\n    return state\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        increment() {\n            dispatch(incrementValue())\n        },\n        decrement() {\n            dispatch(decrementValue())\n        },\n    }\n}\n\nconst CounterContainer = connect(\n    mapsStateToProps,\n    mapDispatchToProps\n)(Counter)\n\nrender(\n  <Provider store={store}>\n      <CounterContainer />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}