{"ast":null,"code":"var _jsxFileName = \"/Users/sorin/Documents/Projects/react_counter_ui/src/index.js\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { connect, Provider } from \"react-redux\";\nimport { render } from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  count: 0\n};\nconst INCREMENT = 'INCREMENT';\n\nconst incrementValue = () => ({\n  type: INCREMENT\n});\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === INCREMENT) {\n    return {\n      count: state.count + 1\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(reducer);\n\nclass Counter extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"Counter\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"count\",\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Increment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Decrement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapsStateToProps = () => {};\n\nrender( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 50,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/sorin/Documents/Projects/react_counter_ui/src/index.js"],"names":["React","Component","App","reportWebVitals","createStore","connect","Provider","render","initialState","count","INCREMENT","incrementValue","type","reducer","state","action","store","Counter","mapsStateToProps","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,aAAlC;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,MAAMC,SAAS,GAAG,WAAlB;;AAEA,MAAMC,cAAc,GAAG,OAAO;AAC1BC,EAAAA,IAAI,EAAEF;AADoB,CAAP,CAAvB;;AAIA,MAAMG,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC9C,MAAIA,MAAM,CAACH,IAAP,KAAgBF,SAApB,EAA+B;AAC3B,WAAO;AACHD,MAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,GAAc;AADlB,KAAP;AAGH;;AACD,SAAOK,KAAP;AACH,CAPD;;AASA,MAAME,KAAK,GAAGZ,WAAW,CAACS,OAAD,CAAzB;;AAEA,MAAMI,OAAN,SAAsBhB,SAAtB,CAAgC;AAC5BM,EAAAA,MAAM,GAAG;AACL,wBACI;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAS,QAAA,SAAS,EAAC,UAAnB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAZ2B;;AAehC,MAAMW,gBAAgB,GAAG,MAAM,CAE9B,CAFD;;AAIAX,MAAM,eACJ,QAAC,KAAD,CAAO,UAAP;AAAA,yBACI,QAAC,QAAD;AAAU,IAAA,KAAK,EAAES,KAAjB;AAAA,2BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADI,EAMJG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANI,CAAN,C,CASA;AACA;AACA;;AACAjB,eAAe","sourcesContent":["import React, {Component} from 'react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { connect, Provider } from \"react-redux\";\nimport { render } from 'react-dom';\n\nconst initialState = {\n    count: 0,\n}\n\nconst INCREMENT = 'INCREMENT';\n\nconst incrementValue = () => ({\n    type: INCREMENT,\n})\n\nconst reducer = (state = initialState, action) => {\n    if (action.type === INCREMENT) {\n        return {\n            count: state.count + 1,\n        }\n    }\n    return state;\n}\n\nconst store = createStore(reducer);\n\nclass Counter extends Component {\n    render() {\n        return (\n            <main className=\"Counter\">\n                <p className=\"count\">0</p>\n                <section className=\"controls\">\n                    <button>Increment</button>\n                    <button>Decrement</button>\n                    <button>Reset</button>\n                </section>\n            </main>\n        );\n    }\n}\n\nconst mapsStateToProps = () => {\n    \n}\n\nrender(\n  <React.StrictMode>\n      <Provider store={store}>\n          <Counter />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}